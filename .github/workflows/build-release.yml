name: Build/publish release

on: [push, pull_request]

jobs:
  publish:
    name: Binary ${{ matrix.target }} (on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            compress: true
            cargo_flags: ""
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            compress: true
            cargo_flags: ""


    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - run: sudo apt install musl-tools
        if: startsWith(matrix.os, 'ubuntu')

      - name: cargo build
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          args: --release --locked ${{ matrix.cargo_flags }}
          target: ${{ matrix.target }}

      - name: Set exe extension for Windows
        run: echo "EXE=.exe" >> $env:GITHUB_ENV
        if: startsWith(matrix.os, 'windows')

      - name: Compress binaries
        uses: svenstaro/upx-action@v2
        with:
          files: target/${{ matrix.target }}/release/miniserve${{ env.EXE }}
          args: --best --lzma
          strip: false  # We're stripping already in Cargo.toml
        if: ${{ matrix.compress }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/miniserve${{ env.EXE }}


   
      